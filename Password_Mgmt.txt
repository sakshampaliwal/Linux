Password management in Linux involves two important files:
    1. /etc/passwd
    2. /etc/shadow

/etc/passwd:
- It contains all the users’ information, including the encrypted password, group ID, and home directory.
- In the past, the /etc/passwd file used to store user passwords in a hashed format directly, but this was not secure. Modern Linux systems have moved the password hashes to the /etc/shadow file, which is typically only readable by the root user.
- The user accounts listed in the /etc/passwd file are not limited to human users. They can also represent system accounts, daemons, and services. These accounts may have specific roles or functions on the system.

E.g: 
Aman: x: 1000:1000: aman sharma, 1231, 9999999999,: /home/aman:/bin/bash

Aman-It is the user
x: It means password is saved on other location.
1000: It is user id
1000: It is group user id
aman till 999: GECOS(General Electric Comprehensive Operating System), it is some personal details about user
/home/aman: It is home directory of user.
/bin/bash: It is default login shell of the user, that will be prompted when user login


/etc/shadow:
- The shadow file stores the hashed passphrase (or “hash”) format for Linux user account with additional properties related to the user password.
- It is readable only by root user.
- "!" is used for user accounts and the asterisk sign "*" is used for service accounts. 
- In Linux, the date 1 January 1970 is known as epoch. This date is used as starting date or day in calculation by several commands and configuration files.
-


mark:$6$.n.:17736:0:99999:7:::
[--] [----] [---] - [---] ----
|      |      |   |   |   |||+-----------> 9. Unused
|      |      |   |   |   ||+------------> 8. Expiration date
|      |      |   |   |   |+-------------> 7. Inactivity period
|      |      |   |   |   +--------------> 6. Warning period
|      |      |   |   +------------------> 5. Maximum password age
|      |      |   +----------------------> 4. Minimum password age
|      |      +--------------------------> 3. Last password change
|      +---------------------------------> 2. Encrypted Password
+----------------------------------------> 1. Username


2nd field options:
$1$ – MD5
$2a$ – Blowfish
$2y$ – Eksblowfish
$5$ – SHA-256
$6$ – SHA-512

3rd field:
This is the date when the password was last changed. The number of days is counted since January 1, 1970 (epoch date).

9th field:
It is reserved for future use.

E.g:
root:$6$riekpK4m$uBdaAyJSk8Xdy1:17777:0:60:14:10:18000:

root: It is a user
$6$....1: It is a password


passwd Command:
- The passwd command sets and changes passwords for users. Use this command to change your own password or another user's password. You can also use the passwd command to change the full name (gecos) associated with your login name and the shell you use as an interface to the operating system.
- 

To change own password: 
You can simply run the passwd command without any arguments. It will prompt you to enter your current password and then to enter the new password twice (for confirmation).

Changing another user passwd:
you must be a superuser (root). Use sudo or log in as the root user and provide the username as an argument to the passwd command.
sudo passwd username

Display info about password: passwd --status
The password status has 7 fields: user login name, password status (locked(L), no password(NP), or password(P)), date of last password change, minimum and maximum password age, warning period for password change, and inactivity period for password change.

Lock user:
The -l or --lock option is used to lock a user account. When an account is locked, an exclamation mark ('!') is placed in front of the encrypted password in the /etc/shadow file, effectively disabling the ability to log in with a password. This is a security measure often used when you want to temporarily or permanently prevent a user from logging in, but you don't want to delete their account.
passwd -l username

Unlock user: 
The -u or --unlock option is used to unlock a previously locked user account. It removes the exclamation mark ('!') from the encrypted password in the /etc/shadow file, allowing the user to log in with their password again.
passwd -u username

Change password in Quiet Mode:
When you run passwd --quiet, you provide the username as an argument, and you don't have to manually enter the old password and the new password. Instead, you can provide the new password directly as a string in the command or through standard input (stdin).
passwd --quiet username <<< "new_password"
It is particularly used in scripts.

To see all passwd commands options: passwd -h

